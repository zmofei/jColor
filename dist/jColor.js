(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["jColor"] = factory();
	else
		root["jColor"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/jColor.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./src/jColor.scss":
/*!********************************************************************************************!*\
  !*** ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./src/jColor.scss ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../node_modules/css-loader/lib/css-base.js */ \"./node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.i, \".jColor-target {\\n  display: inline-block;\\n  width: 30px;\\n  height: 20px;\\n  /*background: #000;*/\\n  vertical-align: middle;\\n  border: 1px solid #ccc; }\\n\\n.jColor-board {\\n  width: 230px;\\n  border: 1px solid #f4f4f4;\\n  position: absolute;\\n  background: white;\\n  border-radius: 4px;\\n  box-shadow: 0px 0px 5px rgba(0, 0, 10, 0.2);\\n  border: 1px solid #ccc;\\n  left: 50px;\\n  top: 50px;\\n  display: none; }\\n\\n.jColor-arrow-up,\\n.jColor-arrow-right,\\n.jColor-arrow-left,\\n.jColor-arrow-down {\\n  transform: rotate(45deg);\\n  position: absolute;\\n  width: 10px;\\n  height: 10px;\\n  margin: -5px;\\n  background: white;\\n  display: none; }\\n\\n.jColor-arrow-up {\\n  top: 0px;\\n  left: 25px;\\n  box-shadow: -1px -2px 5px rgba(0, 0, 10, 0.2); }\\n\\n.jColor-arrow-right {\\n  top: 25px;\\n  left: 230px;\\n  box-shadow: 2px 1px 5px rgba(0, 0, 10, 0.2); }\\n\\n.jColor-arrow-left {\\n  top: 25px;\\n  left: 0px;\\n  box-shadow: 1px 2px 5px rgba(0, 0, 10, 0.2); }\\n\\n.jColor-arrow-down {\\n  top: 100%;\\n  left: 25px;\\n  box-shadow: 2px 1px 5px rgba(0, 0, 10, 0.2); }\\n\\n.jColor-color-board canvas,\\n.jColor-color-bar canvas,\\n.jColor-color-alpha canvas {\\n  width: 230px;\\n  height: 120px;\\n  background: #f4f4f4; }\\n\\n.jColor-color-board {\\n  position: relative;\\n  overflow: hidden; }\\n\\n.jColor-color-board {\\n  width: 230px;\\n  height: 120px; }\\n\\n.jColor-color-bar,\\n.jColor-color-alpha {\\n  width: 200px;\\n  margin: 10px 15px;\\n  padding: 0px;\\n  position: relative; }\\n\\n.jColor-color-board canvas {\\n  border-radius: 4px 4px 0 0; }\\n\\n.jColor-color-bar canvas,\\n.jColor-color-alpha canvas {\\n  width: 200px;\\n  height: 10px; }\\n\\n.jColor-color-board span {\\n  position: absolute;\\n  cursor: pointer;\\n  width: 10px;\\n  height: 10px;\\n  border: 1px solid #fff;\\n  right: 0px;\\n  top: 0px;\\n  margin: -6px;\\n  border-radius: 10px;\\n  box-shadow: 0px 0px 1px #000; }\\n\\n.jColor-color-bar span,\\n.jColor-color-alpha span {\\n  border: 1px solid rgba(0, 0, 0, 0.15);\\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.15);\\n  position: absolute;\\n  top: 0;\\n  left: 100%;\\n  background: #f4f4f4;\\n  cursor: pointer;\\n  border-radius: 10px;\\n  width: 14px;\\n  height: 14px;\\n  margin: -3px -8px; }\\n\", \"\"]);\n\n// exports\n\n\n//# sourceURL=webpack://jColor/./src/jColor.scss?./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js");

/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n//# sourceURL=webpack://jColor/./node_modules/css-loader/lib/css-base.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target) {\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = __webpack_require__(/*! ./urls */ \"./node_modules/style-loader/lib/urls.js\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertInto + \" \" + options.insertAt.before);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = options.transform(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n\n\n//# sourceURL=webpack://jColor/./node_modules/style-loader/lib/addStyles.js?");

/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n\n\n//# sourceURL=webpack://jColor/./node_modules/style-loader/lib/urls.js?");

/***/ }),

/***/ "./src/jColor.js":
/*!***********************!*\
  !*** ./src/jColor.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tools_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tools.js */ \"./src/tools.js\");\n/* harmony import */ var _jColor_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jColor.scss */ \"./src/jColor.scss\");\n/* harmony import */ var _jColor_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_jColor_scss__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nvar tools = new _tools_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\nclass jColor {\n    constructor(dom, options) {\n\n        var appName = this.appName = this.constructor.name;\n\n        if (!dom) {\n            tools.error('param dom is nessary \\n e.g. \\n new ' + appName + '(Dom)');\n        };\n\n        this.dom = dom;\n        this.options = options || {};\n\n        this.finalColor = [255, 0, 0, 1];\n\n        this.boardCursorPos = {\n            left: 1,\n            top: 0\n        };\n        this.barPos = {\n            left: 1\n        }\n\n        this._initDoms();\n        this._initEvent();\n        this._initCanvas();\n        this.set(this.options.value, false);\n    }\n\n    set(color, update) {\n        // console.warn(711, this.finalColor)\n        if (!color) return false;\n        var self = this;\n        var finalColor = color.slice();\n        var color = color;\n        var alpha = color.splice(3, 1);\n        /*\n            _____________________________  C[255,63,0]\n           |     B[255,175,149]          |    ↑   ↑\n           |                ↑ Min(to 0)  |  color bar's left\n           |                             |\n           |     A[153,105,90]           |\n           |        ↑ Max(to 255)        |\n            -----------------------------\n        */\n\n        var max = {\n            value: -Infinity,\n            index: 0\n        };\n        var min = {\n            value: Infinity,\n            index: 0,\n        }\n        color.map(function(item, index) {\n            if (item > max.value && index < 3) {\n                max.value = item;\n                max.index = index;\n            }\n            if (item < min.value && index < 3) {\n                min.value = item;\n                min.index = index;\n            }\n        });\n\n        // 1(A). get the board cursor's top\n        // top = 1 - maxValue / 255;\n        var borderCurosrTop = 1 - max.value / 255;\n        this.boardCursorPos.top = borderCurosrTop;\n        color[max.index] = 255;\n\n        // 2(B). get the board cursor's left\n        // left = 1 - minValue / 255;\n        var borderCurosrLeft = 1 - min.value / 255;\n        this.boardCursorPos.left = borderCurosrLeft;\n        color[min.index] = 0;\n\n        // 3(C). get the color bar's left\n        // this.finalColor = options.value[3];\n        var barLeft = this._colorToBarLeft(color);\n        this.barPos.left = barLeft;\n\n        //\n        var btns = ['colorBoard', 'colorBar', 'colorAlpha'];\n        btns.map(function(value) {\n            var obj = self[value + 'Btn'];\n            var dom = obj.dom;\n            var canvas = obj.canvas;\n            switch (value) {\n                case 'colorBoard':\n                    dom.style.left = canvas.width * self.boardCursorPos.left + 'px';\n                    dom.style.top = canvas.height * self.boardCursorPos.top + 'px';\n                    break;\n                case 'colorBar':\n                    dom.style.left = canvas.width * self.barPos.left + 'px';\n                    break;\n                case 'colorAlpha':\n                    dom.style.left = canvas.width * finalColor[3] + 'px';\n                    break;\n            }\n        });\n        self._setColorBoard();\n        self._setFinalColor(finalColor, !update);\n    }\n\n    _setFinalColor(color, init) {\n        var ctx = this.target.getContext('2d');\n        ctx.fillStyle = 'rgba(' + color[0] + ',' + color[1] + ',' + color[2] + ',' + color[3] + ')';\n        // console\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n        this.finalColor = color;\n        if (!init) {\n            // get the color ;\n            this.options && this.options.change && this.options.change(this.finalColor);\n        }\n    }\n\n    _initDoms() {\n        // init target\n        var target = this.target = document.createElement('canvas');\n        target.className = 'jColor-target';\n        this.dom.appendChild(target);\n\n        // init color board\n        var board = document.createElement('div');\n        board.innerHTML = [\n            '<div class=\"jColor-board\">',\n            '   <div class=\"jColor-arrow-up\"></div>',\n            '   <div class=\"jColor-arrow-left\"></div>',\n            '   <div class=\"jColor-arrow-right\"></div>',\n            '   <div class=\"jColor-arrow-down\"></div>',\n            '   <div class=\"jColor-color-board\">',\n            '       <span></span>',\n            '       <canvas></canvas>',\n            '   </div>',\n            '   <div class=\"jColor-color-bar\">',\n            '       <span></span>',\n            '       <canvas></canvas>',\n            '   </div>',\n            '   <div class=\"jColor-color-alpha\">',\n            '       <span></span>',\n            '       <canvas></canvas>',\n            '   </div>',\n            '</div>'\n        ].join('');\n\n        this.board = board.querySelector('.jColor-board');\n\n\n        document.body.appendChild(board);\n\n        var canvses = ['color-board', 'color-bar', 'color-alpha'];\n        for (var i in canvses) {\n            var name = canvses[i];\n            var jsNames = name.split('-');\n            var jsName = jsNames[0] + jsNames[1].replace(/^\\w/, function(char) {\n                return char.toUpperCase();\n            });\n\n            var blockDom = board.querySelector('.jColor-' + name);\n            var blockWidth = parseInt(getComputedStyle(blockDom).width);\n            var blockHeight = parseInt(getComputedStyle(blockDom).height);\n\n            var canvas = blockDom.querySelector('canvas');\n            if (canvas) {\n                var style = getComputedStyle(canvas);\n                canvas.height = parseInt(style.height);\n                canvas.width = parseInt(style.width);\n                this[jsName + 'Ctx'] = canvas.getContext('2d');\n            }\n\n            //\n            var button = blockDom.querySelector('span');\n            this[jsName + 'Btn'] = {\n                canvas: canvas,\n                dom: button,\n                maxWidth: blockWidth,\n                maxHeight: name == 'color-board' ? blockHeight : 0,\n            };\n        }\n        this._setFinalColor(this.finalColor, true);\n    }\n\n    _initEvent() {\n        var self = this;\n        var btns = [{\n            name: 'colorBoard',\n            cb: function(pos) {\n                self.boardCursorPos = pos;\n                self._setColorAplha();\n                self._getColorOnBoard();\n            }\n        }, {\n            name: 'colorBar',\n            cb: function(pos) {\n                self.barPos.left = pos.left;\n                self._setColorBoard();\n                self._setColorAplha();\n                self._getColorOnBoard();\n            }\n        }, {\n            name: 'colorAlpha',\n            cb: function(pos) {\n                self.finalColor.splice(3, 1, pos.left);\n                self._setFinalColor(self.finalColor);\n            }\n        }];\n\n        var activeBtn = null;\n        var mouseStartX = null;\n        var mouseStartY = null;\n        var btnStartX = null;\n        var btnStartY = null;\n        var btnMaxWidth = null;\n        var btnMaxHeight = null;\n        var callback = null;\n        var activeBoard = false;\n\n        this.target.addEventListener('click', function(e) {\n            activeBoard = true;\n            var dom = e.target;\n            var offset = tools.getOffset(dom);\n            // let's say the color show on the buttom of the target\n            // TODO: the color can appear in left/top/right/bottom of the target, \n            //       depend the space of the window\n            var top = offset.top + dom.offsetHeight + 10;\n            var left = offset.left + dom.offsetWidth / 2 - 25;\n            self.board.style.left = left + 'px';\n            self.board.style.top = top + 'px';\n            self.board.style.display = 'block';\n            self.board.querySelector('.jColor-arrow-up').style.display = 'block';\n        });\n\n        btns.map(function(item) {\n            var btnDom = self[item.name + 'Btn'].dom;\n            var canvasDom = self[item.name + 'Ctx'].canvas;\n            var maxWidth = self[item.name + 'Btn'].maxWidth;\n            var maxHeight = self[item.name + 'Btn'].maxHeight;\n            var cbfn = item.cb;\n\n            canvasDom.addEventListener('mousedown', function(e) {\n                activeBtn = btnDom;\n                mouseStartX = e.pageX;\n                mouseStartY = e.pageY;\n                btnStartX = e.offsetX;\n                btnStartY = e.offsetY;\n                btnMaxWidth = maxWidth;\n                btnMaxHeight = maxHeight;\n                callback = cbfn;\n                fitHandle(btnStartX, btnStartY, callback)\n            });\n\n            btnDom.addEventListener('mousedown', function(e) {\n                activeBtn = btnDom;\n                mouseStartX = e.pageX;\n                mouseStartY = e.pageY;\n                btnStartX = parseInt(getComputedStyle(activeBtn).left);\n                btnStartY = parseInt(getComputedStyle(activeBtn).top);\n                btnMaxWidth = maxWidth;\n                btnMaxHeight = maxHeight;\n                callback = cbfn;\n                fitHandle(btnStartX, btnStartY, callback)\n            });\n        });\n\n        window.addEventListener('mousemove', function(e) {\n            if (!activeBtn) return false;\n            var deltaX = e.pageX - mouseStartX;\n            var deltaY = e.pageY - mouseStartY;\n            var left = btnStartX + deltaX;\n            var top = btnStartY + deltaY;\n            fitHandle(left, top, callback)\n\n            e.preventDefault();\n            e.stopPropagation();\n            return false;\n        });\n\n        window.addEventListener('mousedown', function(e) {\n            if (!activeBoard) return false;\n            var dom = e.target;\n            var close = true;\n            while (dom) {\n                if (dom == self.board || dom == self.target) {\n                    close = false;\n                    break;\n                }\n                dom = dom.parentElement;\n            }\n            if (close) {\n                self.board.style.display = 'none';\n                self.options && self.options.choosed && self.options.choosed(self.finalColor);\n                activeBoard = false;\n            }\n        });\n\n        function fitHandle(left, top, callback) {\n            left = Math.max(0, left);\n            left = Math.min(btnMaxWidth, left);\n            top = Math.max(0, top);\n            top = Math.min(btnMaxHeight, top);\n            var leftPersent = left / btnMaxWidth;\n            var topPersent = top / btnMaxHeight;\n            activeBtn.style.left = left + 'px';\n            activeBtn.style.top = top + 'px';\n\n            callback && callback({\n                left: leftPersent,\n                top: topPersent\n            });\n            activeBtn.style.left = left + 'px';\n            activeBtn.style.top = top + 'px';\n        }\n\n        window.addEventListener('mouseup', function(e) {\n            if (!activeBtn) return false;\n            activeBtn = null;\n        });\n    }\n\n    _initCanvas() {\n        this._setColorBar();\n        this._setColorBoard();\n        this._setColorAplha();\n    }\n\n    _setColorBar() {\n        var ctx = this.colorBarCtx;\n        var width = ctx.canvas.width;\n        var height = ctx.canvas.height;\n\n        var gradient = ctx.createLinearGradient(0, 0, width, 0);\n        gradient.addColorStop(0 / 6, 'rgb(255, 0, 0)');\n        gradient.addColorStop(1 / 6, 'rgb(255, 255, 0)');\n        gradient.addColorStop(2 / 6, 'rgb(0, 255, 0)');\n        gradient.addColorStop(3 / 6, 'rgb(0, 255, 255)');\n        gradient.addColorStop(4 / 6, 'rgb(0, 0, 255)');\n        gradient.addColorStop(5 / 6, 'rgb(255, 0, 255)');\n        gradient.addColorStop(6 / 6, 'rgb(255, 0, 0)');\n        ctx.fillStyle = gradient;\n        ctx.fillRect(0, 0, width, height);\n    }\n\n    _setColorBoard() {\n        var barColor = this._getColorOnBar();\n        // console.log(barColor)\n        var r = barColor[0];\n        var g = barColor[1];\n        var b = barColor[2];\n        var ctx = this.colorBoardCtx;\n        var width = ctx.canvas.width;\n        var height = ctx.canvas.height;\n\n        var deltaR = 255 - r;\n        var deltaG = 255 - g;\n        var deltaB = 255 - b;\n\n        var stepR = deltaR / (width - 1);\n        var stepG = deltaG / (width - 1);\n        var stepB = deltaB / (width - 1);\n\n        ctx.fillStyle = 'rgb(' + r + ',' + g + ',' + b + ')';\n        ctx.fillRect(0, 0, width, height);\n\n        var imgData = ctx.getImageData(0, 0, width, height);\n        var firstLine = []\n        for (var i = 0; i < width; i++) {\n            var R = 255 - i * stepR;\n            var G = 255 - i * stepG;\n            var B = 255 - i * stepB;\n            firstLine.push({\n                r: R,\n                g: G,\n                b: B,\n                stepRByRow: R / height,\n                stepGByRow: G / height,\n                stepBByRow: B / height\n            });\n        };\n        var count = 0;\n        for (var i = 0; i < imgData.data.length; i += 4) {\n            var lineNum = Math.floor(count / width);\n            var rowNum = Math.ceil(count % width);\n            count++;\n\n            var newR = firstLine[rowNum].r - firstLine[rowNum].stepRByRow * lineNum;\n            var newG = firstLine[rowNum].g - firstLine[rowNum].stepGByRow * lineNum;\n            var newB = firstLine[rowNum].b - firstLine[rowNum].stepBByRow * lineNum;\n            imgData.data[i] = newR;\n            imgData.data[i + 1] = newG;\n            imgData.data[i + 2] = newB;\n        }\n\n        ctx.putImageData(imgData, 0, 0)\n    }\n\n    _setColorAplha() {\n        var r = this.finalColor[0];\n        var g = this.finalColor[1];\n        var b = this.finalColor[2];\n\n        var ctx = this.colorAlphaCtx;\n        var width = ctx.canvas.width;\n        var height = ctx.canvas.height;\n\n        var line = 0;\n        var row = 0;\n        var gredWidth = 5;\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.fillStyle = \"#bbb\";\n        while (line <= height / gredWidth) {\n            while (row <= width / gredWidth) {\n                if ((line + row) % 2 == 0) {\n                    ctx.fillRect(row * gredWidth, line * gredWidth, gredWidth, gredWidth);\n                }\n                row++;\n            }\n            row = 0;\n            line++;\n        }\n\n        var gradient = ctx.createLinearGradient(0, 0, width, 0);\n        gradient.addColorStop(0, 'rgba(' + r + ',' + g + ', ' + b + ',0)');\n        gradient.addColorStop(1, 'rgba(' + r + ',' + g + ', ' + b + ',1)');\n        ctx.fillStyle = gradient;\n\n        ctx.fillRect(0, 0, width, height)\n    }\n\n    _getColorOnBoard() {\n        var pos = this.boardCursorPos;\n        // console.log(pos)\n        var self = this;\n        var topColor = this._getColorOnBar().map((color) => {\n            var setp = 255 - color;\n            return parseInt(color + setp * (1 - pos.left));\n        });\n        var color = [];\n        var finalColor = topColor.map((_color, index) => {\n            var _color = parseInt(_color * (1 - pos.top));\n            color[index] = _color\n            return _color;\n        });\n        this._setFinalColor([color[0], color[1], color[2], this.finalColor[3]]);\n    }\n\n    _getColorOnBar() {\n        var present = this.barPos.left;\n        var step = (1 / 6);\n        var level = Math.floor(present / step);\n        var leverPresent = present % step / step;\n\n        if (level > 5) {\n            level = 0;\n            leverPresent = 0;\n        }\n\n        var r = 0;\n        var g = 0;\n        var b = 0;\n        switch (level) {\n            case 0:\n                r = 255;\n                g = 255 * leverPresent;\n                b = 0;\n                break;\n            case 1:\n                r = 255 * (1 - leverPresent);\n                g = 255;\n                b = 0;\n                break;\n            case 2:\n                r = 0;\n                g = 255;\n                b = 255 * leverPresent;\n                break;\n            case 3:\n                r = 0;\n                g = 255 * (1 - leverPresent);\n                b = 255;\n                break;\n            case 4:\n                r = 255 * leverPresent;\n                g = 0;\n                b = 255;\n                break;\n            case 5:\n            default:\n                r = 255;\n                g = 0;\n                b = 255 * (1 - leverPresent);\n                break;\n        }\n        return [parseInt(r), parseInt(g), parseInt(b)]\n    }\n\n    _colorToBarLeft(color) {\n        var map = {};\n        color.forEach(function(value, index) {\n            map[value == '255' ? 'max' : value == '0' ? 'min' : 'middle'] = index;\n        });\n        /*\n            0:R 1:G 2:B\n               * R=255            \n               * G=0-255\n               * B=0\n               max=0           max=1         max=1          max=2          max=2           max=0\n               mid=1           mid=0         mid=2          mid=1          mid=0           mid=2\n                 ↓               ↓             ↓              ↓              ↓               ↓  \n          ┌──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────┐\n        1,0,0          1,1,0          0,1,0          0,1,1          0,0,1          1,0,1          1,0,0\n        255,0,0        255,255,0      0,255,0        0,255,255      0,0,255        255,0,255      255,0,0\n        */\n\n        var step = (1 / 6);\n        var basicPresent;\n        var stepPresent;\n        var present;\n        if (map.max == 0) {\n            switch (map.middle) {\n                case 1:\n                    basicPresent = 0 * step;\n                    stepPresent = (color[map.middle] / 255) * step;\n                    present = basicPresent + stepPresent;\n                    break;\n                case 2:\n                    basicPresent = 5 * step;\n                    stepPresent = (1 - color[map.middle] / 255) * step;\n                    present = basicPresent + stepPresent;\n                    break;\n                default:\n                    present = 0;\n                    break;\n            }\n        } else if (map.max == 1) {\n            switch (map.middle) {\n                case 0:\n                    basicPresent = 1 * step;\n                    stepPresent = (1 - color[map.middle] / 255) * step;\n                    present = basicPresent + stepPresent;\n                    break;\n                case 2:\n                    basicPresent = 2 * step;\n                    stepPresent = (color[map.middle] / 255) * step;\n                    present = basicPresent + stepPresent;\n                    break;\n                default:\n                    present = 2 * step;\n                    break;\n            }\n        } else if (map.max == 2) {\n            switch (map.middle) {\n                case 0:\n                    basicPresent = 4 * step;\n                    stepPresent = (color[map.middle] / 255) * step;\n                    present = basicPresent + stepPresent;\n                    break;\n                case 1:\n                    basicPresent = 3 * step;\n                    stepPresent = (1 - color[map.middle] / 255) * step;\n                    present = basicPresent + stepPresent;\n                    break;\n                default:\n                    present = 2 * step;\n                    break;\n            }\n        } else {\n            present = 0;\n        }\n\n        return present;\n    }\n}\n\nwindow.jColor = jColor;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (jColor);\n\n//# sourceURL=webpack://jColor/./src/jColor.js?");

/***/ }),

/***/ "./src/jColor.scss":
/*!*************************!*\
  !*** ./src/jColor.scss ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../node_modules/css-loader!../node_modules/sass-loader/lib/loader.js!./jColor.scss */ \"./node_modules/css-loader/index.js!./node_modules/sass-loader/lib/loader.js!./src/jColor.scss\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack://jColor/./src/jColor.scss?");

/***/ }),

/***/ "./src/tools.js":
/*!**********************!*\
  !*** ./src/tools.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass Tools {\n    error() {\n        throw new Error('[' + appName + '] ' + txt);\n    }\n\n    getOffset(dom) {\n        var left = 0;\n        var top = 0;\n        while (dom.offsetParent) {\n            left += dom.offsetLeft;\n            top += dom.offsetTop;\n            dom = dom.offsetParent\n        }\n        return {\n            left: left,\n            top: top\n        }\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Tools);\n\n//# sourceURL=webpack://jColor/./src/tools.js?");

/***/ })

/******/ });
});